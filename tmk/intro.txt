//SpeciesType.java//

package Midterm1;

public enum SpeciesType {
    CAT,
    KOALA,
    CAPYBARA,
    CABBOT,
    PORG,
    PIKACHU;
}


//NameMaker.java//


package Midterm1;

import java.io.FileReader;
import java.io.FileNotFoundException;
import java.util.Random;
import java.util.Scanner;

public class NameMaker {

    public static String[] getNames() {
        try (Scanner scanner = new Scanner(new FileReader("data\\animalNames.txt"))) {
            int count = Integer.parseInt(scanner.nextLine());
            String[] names = new String[count];
            for (int i = 0; i < count; i++) {
                names[i] = scanner.nextLine();
            }
            return names;
        } catch (FileNotFoundException e) {
            return null;
        }
    }

    public static String getRandomName() {
        String[] names = getNames();
        if (names == null || names.length == 0) {
            return null;
        }
        Random random = new Random();
        return names[random.nextInt(names.length)];
    }
}

//Animal.java// 


package Midterm1;

public class Animal {
    private String name;
    private SpeciesType species;
    private double weight;

    public Animal(String name, SpeciesType species) {
        this.name = name;
        this.species = species;
        this.weight = getMaxWeight(species) / 2.0;
    }

    public String getName() {
        return name;
    }

    public SpeciesType getSpecies() {
        return species;
    }

    public double getWeight() {
        return weight;
    }

    public void setWeight(double weight) {
        if (weight <= 0 || weight >= getMaxWeight(species)) {
            throw new IllegalArgumentException("Weight must be > 0 and less than max weight.");
        }
        this.weight = weight;
    }

    // Species properties based on species type
    public static boolean isEndangered(SpeciesType species) {
        if (species == SpeciesType.KOALA || species == SpeciesType.CABBOT) {
            return true;
        }
        return false;
    }

    public static int getLifeExpectancy(SpeciesType species) {
        if (species == SpeciesType.CAT) return 15;
        if (species == SpeciesType.KOALA) return 12;
        if (species == SpeciesType.CAPYBARA) return 8;
        if (species == SpeciesType.CABBOT) return 10000;
        if (species == SpeciesType.PORG) return 3;
        if (species == SpeciesType.PIKACHU) return 28;
        return 0;
    }

    public static double getMaxWeight(SpeciesType species) {
        if (species == SpeciesType.CAT) return 30.0;
        if (species == SpeciesType.KOALA) return 30.5;
        if (species == SpeciesType.CAPYBARA) return 150.0;
        if (species == SpeciesType.CABBOT) return 10000.0;
        if (species == SpeciesType.PORG) return 7.5;
        if (species == SpeciesType.PIKACHU) return 16.8;
        return 0.0;
    }

    @Override
    public String toString() {
        return name + " - " + species.name() + " - " + (int)weight;
    }

    public static Animal[] makeZoo() {
        SpeciesType[] allSpecies = SpeciesType.values();
        Animal[] zoo = new Animal[allSpecies.length];
        String[] usedNames = new String[allSpecies.length];
        int count = 0;

        while (count < allSpecies.length) {
            String randomName = NameMaker.getRandomName();
            if (randomName == null) {
                randomName = "NoName";
            }
            boolean nameUsed = false;
            for (int i = 0; i < count; i++) {
                if (usedNames[i].equals(randomName)) {
                    nameUsed = true;
                    break;
                }
            }
            if (!nameUsed) {
                usedNames[count] = randomName;
                zoo[count] = new Animal(randomName, allSpecies[count]);
                count++;
            }
        }
        return zoo;
    }
}



package Midterm1;

public class ZooMain {
    public static void main(String[] args) {
        NameMaker nameMaker = new NameMaker("data/animalNames.txt");
        Animal[] zoo = Animal.makeZoo(nameMaker);

        for (int i = 0; i < zoo.length; i++) {
            System.out.println(zoo[i]);
        }
    }
}

